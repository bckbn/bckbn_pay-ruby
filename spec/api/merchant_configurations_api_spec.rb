=begin
#Bckbn Pay API

#API for Bckbn Pay services

The version of the OpenAPI document: 0.1.0

Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'

# Unit tests for BckbnPay::MerchantConfigurationsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MerchantConfigurationsApi' do
  let(:api_instance) { BckbnPay::MerchantConfigurationsApi.new }

  describe 'test an instance of MerchantConfigurationsApi' do
    it 'should create an instance of MerchantConfigurationsApi' do
      expect(api_instance).to be_instance_of(BckbnPay::MerchantConfigurationsApi)
    end
  end

  let(:api_key) { Faker::Alphanumeric.alphanumeric(number: 32) }
  let(:api_version) { "0.1.0" }
  let(:config) do
    api_instance.api_client.config.tap do |c|
      c.api_key['ApiKeyAuth'] = api_key
      c.host = "localhost:3000"
      c.scheme = "http"
    end
  end
  let(:path) { "/merchant_configurations" }
  let(:request_headers) do
    {
      'Accept'        =>  'application/json',
      "Content-Type"  => "application/json",
      'X-Api-Version' => api_version,
      'X-Api-Key' => api_key
    }
  end
  let(:response_headers) do
    {
      'Accept'        =>  'application/json',
      "Content-Type"  => "application/json"
    }
  end

  # unit tests for create_merchant_configurations
  # Create merchant configurations
  # @param x_api_version
  # @param create_merchant_configuration_request
  # @param [Hash] opts the optional parameters
  # @return [MerchantConfigurationResponse]
  describe 'create_merchant_configurations test' do
    let(:body) do
      {
        merchant_configuration: {
          name: Faker::Company.name,
          settings: {
            currency: "USD",
            timezone: "UTC"
          }
        }
      }
    end

    before do
      stub_request(:post, [config.host, path].join)
        .with(headers: request_headers, body: body.to_json)
        .to_return(
          status: 201,
          body: fixture("merchant_configurations/update_201.json"),
          headers: response_headers
        )
    end

    it 'should work' do
      res = api_instance.create_merchant_configurations(api_version, body)

      expect(res).to be_instance_of(BckbnPay::MerchantConfigurationResponse)
    end
  end

  # unit tests for get_merchant_configurations
  # Retrieve merchant configurations
  # @param x_api_version
  # @param [Hash] opts the optional parameters
  # @return [MerchantConfigurationResponse]
  describe 'get_merchant_configurations test' do
    before do
      stub_request(:get, [config.host, path].join)
        .with(headers: request_headers)
        .to_return(
          status: 200,
          body: fixture("merchant_configurations/show_200.json"),
          headers: response_headers
        )
    end

    it 'should work' do
      res = api_instance.get_merchant_configurations(api_version)

      expect(res).to be_instance_of(BckbnPay::MerchantConfigurationResponse)
    end
  end

end
